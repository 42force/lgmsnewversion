# Generated by Django 2.1.7 on 2019-06-10 03:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lgmssis', '0006_auto_20190610_1125'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='AwardStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('award', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lgmsschedule.Award')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='If active, course will show in Moodle.')),
                ('fullname', models.CharField(max_length=255, unique=True)),
                ('shortname', models.CharField(max_length=255)),
                ('homeroom', models.BooleanField(help_text='Homerooms can be used for attendance')),
                ('graded', models.BooleanField(default=True, help_text='Teachers can submit grades for this course')),
                ('description', models.TextField(blank=True)),
                ('last_grade_submission', models.DateTimeField(blank=True, editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, default='Student', max_length=255)),
                ('attendance_note', models.CharField(blank=True, help_text='This note will appear when taking attendance', max_length=255)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lgmsschedule.Course')),
            ],
        ),
        migrations.CreateModel(
            name='CourseMeet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('1', 'Monday'), ('2', 'Tuesday'), ('3', 'Wednesday'), ('4', 'Thursday'), ('5', 'Friday'), ('6', 'Saturday'), ('7', 'Sunday')], max_length=1)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lgmsschedule.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('1', 'Monday'), ('2', 'Tuesday'), ('3', 'Wednesday'), ('4', 'Thursday'), ('5', 'Friday'), ('6', 'Saturday'), ('7', 'Sunday')], max_length=1)),
            ],
            options={
                'ordering': ('day',),
            },
        ),
        migrations.CreateModel(
            name='DaysOff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MarkingPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ame', models.CharField(max_length=255, unique=True)),
                ('shortname', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('active', models.BooleanField(help_text='Teachers may only enter grades for active marking periods. There may be more than one active marking period.')),
                ('show_reports', models.BooleanField(default=True, help_text='If checked this marking period will show up on reports.')),
                ('monday', models.BooleanField(default=True)),
                ('tuesday', models.BooleanField(default=True)),
                ('wednesday', models.BooleanField(default=True)),
                ('thursday', models.BooleanField(default=True)),
                ('friday', models.BooleanField(default=True)),
                ('saturday', models.BooleanField()),
                ('sunday', models.BooleanField()),
                ('school_days', models.IntegerField(blank=True, help_text='If set, this will be the number of days school is in session. If unset, the value is calculated by the days off.', null=True)),
                ('school_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lgmssis.SchoolYear')),
            ],
            options={
                'ordering': ('-start_date',),
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
            options={
                'ordering': ('start_time',),
            },
        ),
        migrations.AddField(
            model_name='daysoff',
            name='marking_period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lgmsschedule.MarkingPeriod'),
        ),
        migrations.AddField(
            model_name='coursemeet',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lgmsschedule.Location'),
        ),
        migrations.AddField(
            model_name='coursemeet',
            name='period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lgmsschedule.Period'),
        ),
        migrations.AddField(
            model_name='courseenrollment',
            name='exclude_days',
            field=models.ManyToManyField(blank=True, help_text='Student does not need to attend on this day. Note courses already specify meeting days, this field is for students who have a special reason to be away', to='lgmsschedule.Day'),
        ),
        migrations.AddField(
            model_name='courseenrollment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='courseenrollment',
            name='year',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lgmssis.GradeLevel'),
        ),
        migrations.AddField(
            model_name='course',
            name='enrollments',
            field=models.ManyToManyField(blank=True, through='lgmsschedule.CourseEnrollment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lgmssis.GradeLevel'),
        ),
        migrations.AddField(
            model_name='course',
            name='marking_period',
            field=models.ManyToManyField(blank=True, to='lgmsschedule.MarkingPeriod'),
        ),
        migrations.AddField(
            model_name='course',
            name='periods',
            field=models.ManyToManyField(blank=True, through='lgmsschedule.CourseMeet', to='lgmsschedule.Period'),
        ),
        migrations.AddField(
            model_name='course',
            name='secondary_teachers',
            field=models.ManyToManyField(blank=True, related_name='secondary_teachers', to='lgmssis.Faculty'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ateacher', to='lgmssis.Faculty'),
        ),
        migrations.AddField(
            model_name='awardstudent',
            name='marking_period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lgmsschedule.MarkingPeriod'),
        ),
        migrations.AddField(
            model_name='awardstudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lgmssis.Student'),
        ),
        migrations.AlterUniqueTogether(
            name='courseenrollment',
            unique_together={('course', 'user', 'role')},
        ),
    ]
